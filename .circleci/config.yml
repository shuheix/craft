version: 2
jobs:
  # rspecのCI
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.7.2
        environment:
          RAILS_ENV: test
          CRAFT_DATABASE_HOST: 127.0.0.1
          CRAFT_USERNAME: 'root'
          CRAFT_PASSWORD: ""

      - image: circleci/mysql:8.0
        command: --default-authentication-plugin=mysql_native_password

    working_directory: ~/craft/backend

    steps:
      - checkout:
          path: ~/craft
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-
      - run:
          name: prepare bundler
          command: gem install bundler -v 2.2.28
      - run:
          name: install dependencies
          command: bundle install
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run: bundle exec rspec

  # devサーバー起動job
  front_server:
    docker:
      - image: circleci/node:14.4.0-stretch-browsers
    working_directory: ~/craft/frontend
    steps:
      - checkout:
          path: ~/craft
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: add env
          command: |
            echo "REACT_APP_FIREBASE_API_KEY=${REACT_APP_FIREBASE_API_KEY}" > .env
            echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${REACT_APP_FIREBASE_AUTH_DOMAIN}" > .env
            echo "REACT_APP_PROJECT_ID=${REACT_APP_PROJECT_ID}" > .env
            echo "REACT_APP_STORAGE_BUCKET=${REACT_APP_STORAGE_BUCKET}" > .env
            echo "REACT_APP_MESSAGING_SENDER_ID=${REACT_APP_MESSAGING_SENDER_ID}" > .env
            echo "REACT_APP_APP_ID=${REACT_APP_APP_ID}" > .env
            echo "REACT_APP_MEASUREMENT_ID=${REACT_APP_MEASUREMENT_ID}" > .env
      - run:
          name: yarn REACT_APP_STORAGE_BUCKET
          command: yarn start
          background: true
<<<<<<< HEAD

=======
>>>>>>> bbe58f907d7b70801ec9af918563b34df414d168

  # e2e実行job
  front_test:
    docker:
      - image: cypress/base:14.16.0
    environment:
        - TERM: xterm
        - CYPRESS_CACHE_FOLDER: /tmp/.cache/Cypress
    working_directory: ~/craft/frontend/e2e
    steps:
      - checkout:
          path: ~/craft
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "yarn.lock" }}
            - v2-dependencies-
          paths:
            - /tmp/.cache/Cypress
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          key: v2-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - /tmp/.cache/Cypress/8.5.0/Cypress/Cypress
      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
<<<<<<< HEAD
      - run:
          command: yarn cypress install
      - run:
          command: yarn cypress:run
=======
      - run: yarn cypress install
      - run: yarn cypress:run
>>>>>>> bbe58f907d7b70801ec9af918563b34df414d168

workflows:
  version: 2
  all-test:
    jobs:
      # - build
      - front_server
      - front_test:
          requires:
            # - build
            - front_server




